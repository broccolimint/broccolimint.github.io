{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","smartContract2","smartContract3","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","totalSupplyMutant","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","abiResponse2","abi2","configResponse","abiResponse3","abi3","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","SmartContractMutant","CONTRACT_ADDRESS_MUTANT","SmartContractApprove","CONTRACT_ADDRESS_APPROVE","on","updateAccount","location","reload","NAME","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","truncate","input","len","length","substring","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","claimingMutant","setClaimingMutant","approving","setApproving","feedback","setFeedback","feedback2","setFeedback2","mintAmount","setMintAmount","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","decrementMintAmount","newMintAmount","incrementMintAmount","getData","getConfig","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","Number","onClick","e","preventDefault","lineHeight","disabled","gasLimit","totalCostWei","String","totalGasLimit","mint","send","maxPriorityFeePerGas","maxFeePerGas","to","from","value","once","err","then","receipt","claimNFTs","width","claimMutants","approve","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b2c75f0.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  smartContract2: null,\n  smartContract3: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n      case \"CONNECTION_SUCCESS\":\n        return {\n          ...state,\n          loading: false,\n          account: action.payload.account,\n          smartContract: action.payload.smartContract,\n          smartContract2: action.payload.smartContract2,\n          smartContract3: action.payload.smartContract3,\n          web3: action.payload.web3,\n        };  \n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  totalSupplyMutant: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        totalSupplyMutant: action.payload.totalSupplyMutant,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let totalSupplyMutant = await store\n        .getState()\n        .blockchain.smartContract2.methods.totalSupply()\n        .call();\n\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          totalSupplyMutant,\n\n          // cost,\n        })\n      );\n      \n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const abiResponse2 = await fetch(\"/config/abi2.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi2 = await abiResponse2.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abiResponse3 = await fetch(\"/config/abi3.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi3 = await abiResponse3.json();\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          )\n          const SmartContractMutant = new Web3EthContract(\n            abi2,\n            CONFIG.CONTRACT_ADDRESS_MUTANT\n          )\n          const SmartContractApprove = new Web3EthContract(\n            abi3,\n            CONFIG.CONTRACT_ADDRESS_APPROVE\n          )\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              smartContract2: SmartContractMutant,\n              smartContract3: SmartContractApprove,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [claimingMutant, setClaimingMutant] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [feedback2, setFeedback2] = useState(\"Your Mutated Broccoli is waiting for you!\");\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    CONTRACT_ADDRESS_MUTANT: \"\",\n    CONTRACT_ADDRESS_APPROVE: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n      gasLimit: String(totalGasLimit),\n      maxPriorityFeePerGas: null,\n      maxFeePerGas: null,\n      to: CONFIG.CONTRACT_ADDRESS,\n      from: blockchain.account,\n      value: totalCostWei,\n    })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n  const claimMutants = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(0);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback2(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract2.methods\n      .mint(mintAmount)\n      .send({\n      gasLimit: String(totalGasLimit),\n      maxPriorityFeePerGas: null,\n      maxFeePerGas: null,\n      to: CONFIG.CONTRACT_ADDRESS,\n      from: blockchain.account,\n      value: totalCostWei,\n    })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback2(\"Sorry, something went wrong please try again later.\");\n        setClaimingMutant(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback2(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingMutant(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const approve = () => {\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(0);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback2(`Approving..`);\n    setApproving(true);\n    blockchain.smartContract3.methods\n    .approve(\"0x6186AA2212eA784fFa0260535d7f8C66D4Ca8E7F\", \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\")\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback2(\"There was an error approving. Please try again later.\");\n        setApproving(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback2(\n          `Successfully approvd.`\n        );\n        setApproving(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 25) {\n      newMintAmount = 25;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= \"3333\" ? ( //data.totalSupply //CONFIG.MAX_SUPPLY ?\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  First Batch has sold out. The sale of the second batch will begin shortly.\n               </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              \n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images2/bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images2/logo.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images2/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupplyMutant} / 1000\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(\"0x6186AA2212eA784fFa0260535d7f8C66D4Ca8E7F\", 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupplyMutant) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 MBRCC costs 222 BRCC{\" \"}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback2}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingMutant ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimMutants();\n                          getData();\n                        }}\n                      >\n                        {claimingMutant ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                      <s.SpacerSmall></s.SpacerSmall>\n                      <StyledButton\n                    disabled={approving ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      approve();\n                      getData();\n                    }}\n                  >\n                    {approving ? \"BUSY\" : \"APPROVE\"}\n                  </StyledButton>\n\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images2/example.gif\"}\n              \n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}